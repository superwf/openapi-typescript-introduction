{"version":3,"sources":["SwaggerGenerator/style.module.less","Overview/style.module.less","Title/style.module.less","OpenApi/style.module.less","Preface/style.module.less","JSONSchema/style.module.less","Swagger/style.module.less","TsGear/style.module.less","SwaggerGeneratorIssue/style.module.less","coordinate.ts","Title/index.tsx","Preface/helper.ts","Preface/index.tsx","LinkOutside.tsx","JSONSchema/index.tsx","OpenApi/index.tsx","Swagger/index.tsx","SwaggerGenerator/index.tsx","Overview/index.tsx","TsGear/index.tsx","SwaggerGeneratorIssue/index.tsx","App.tsx","index.tsx"],"names":["module","exports","coords","id","coordinates","zipObject","map","property","values","Title","className","s","step","title","qrcode","alt","src","count","addImageAnimateClass","e","images","currentTarget","querySelectorAll","classList","remove","add","Preface","preface","onClick","data-color","LinkOutside","href","children","target","rel","JSONSchema","language","OpenApi","imgBg","Swagger","SwaggerGenerator","process","height","compile","next","Overview","overview","content","style","marginTop","TsGear","width","SwaggerGeneratorIssue","App","ReactDOM","render","document","getElementById","global","impress","init"],"mappings":"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","file":"static/main-chunk-24b39.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__27WJW\",\"process\":\"style_process__P2dWz\",\"compile\":\"style_compile__2cJBm\",\"next\":\"style_next__2VaGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__1cQhI\",\"title\":\"style_title__1ScPO\",\"content\":\"style_content__2GewG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__3ewDn\",\"qrcode\":\"style_qrcode__1Am7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__20AQa\",\"imgBg\":\"style_imgBg__1rxyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__vcvqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__1cra4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__1IOFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__2snyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"style_step__3a4E3\"};","import { map, zipObject, property, values } from 'lodash'\n\n/** 统一配置所有页面的坐标等变形参数 */\nconst coords = [\n  {\n    id: 'qrcode',\n    'data-x': '-4000',\n    'data-y': '-3000',\n    'data-z': '-200',\n    'data-scale': '2',\n  },\n  {\n    id: 'title',\n    'data-x': '-4000',\n    'data-y': '-2000',\n    'data-z': '-400',\n    'data-scale': '4',\n  },\n  {\n    id: 'preface',\n    'data-x': '-5000',\n    'data-y': '300',\n    'data-z': '-500',\n  },\n  {\n    id: 'JSONSchema',\n    'data-x': '-6000',\n    'data-y': '2000',\n    'data-z': '-1500',\n    'data-rotate-y': '10',\n  },\n  {\n    id: 'OpenApi',\n    'data-x': '-4800',\n    'data-y': '1500',\n    'data-z': '-2000',\n    'data-rotate-y': '20',\n  },\n  {\n    id: 'Swagger',\n    'data-x': '-3600',\n    'data-y': '2200',\n    'data-z': '-2500',\n    'data-rotate-y': '10',\n  },\n  {\n    id: 'SwaggerGenerator',\n    'data-x': '-2000',\n    'data-y': '2300',\n    'data-z': '-3000',\n  },\n  {\n    id: 'SwaggerGeneratorIssue',\n    'data-x': '3000',\n    'data-y': '1000',\n    'data-z': '-1500',\n    'data-rotate-x': '-720',\n  },\n  {\n    id: 'TsGear',\n    'data-x': '2000',\n    'data-y': '-1000',\n    'data-z': '3000',\n    'data-scale': '1',\n  },\n  {\n    id: 'overview',\n    'data-x': '0',\n    'data-y': '0',\n    'data-z': '0',\n    'data-rotate': '0',\n    'data-scale': '7',\n  },\n]\n\nexport const coordinates = zipObject(map(coords, property('id')), values(coords))\n","import * as React from 'react'\n\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\n\nexport const Title: React.FC = () => {\n  return (\n    <div className={`step ${s.step}`} {...coordinates.title}>\n      <h1 className=\"color08 text-center\">\n        如何从<b className=\"color4\">Swagger 定义</b>\n        <b className=\"color6\">自动</b>生成\n        <b className=\"color10\">请求层 Service</b>代码\n      </h1>\n      <p className={s.qrcode}>\n        <img alt=\"qrcode1\" src=\"/asset/qrcode1.jpg\" />\n        <img alt=\"qrcode2\" src=\"/asset/qrcode2.jpg\" />\n      </p>\n    </div>\n  )\n}\n","import * as React from 'react'\n\n// 一共两个图，count到2结束\nlet count = 0\n\nexport const addImageAnimateClass = (e: React.MouseEvent<HTMLHeadingElement>) => {\n  if (count > 1) {\n    return\n  }\n  const target = e.currentTarget\n  const images = target.querySelectorAll('img')\n  if (count === 0) {\n    images[0].classList.remove('invisible')\n    images[0].classList.add('animate__backInLeft')\n    count += 1\n    return\n  }\n  if (count === 1) {\n    images[1].classList.remove('invisible')\n    images[1].classList.add('animate__backInRight')\n    count += 1\n  }\n}\n","import * as React from 'react'\n\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\nimport { addImageAnimateClass } from './helper'\n\nexport const Preface: React.FC = () => {\n  return (\n    <div className={`step ${s.step}`} {...coordinates.preface}>\n      <h1 className=\"text-center title color4\">前言</h1>\n      <h2 className=\"align-center color8\" onClick={addImageAnimateClass}>\n        <b className=\"color8\">1.</b>面向人群\n        <img className=\"animate__animated invisible\" alt=\"serverCoder\" src=\"/asset/serverCoder.jpg\" />\n        <img className=\"animate__animated invisible\" alt=\"clientCoder\" src=\"/asset/clientCoder.jpg\" />\n      </h2>\n      <h2 className=\"color8\">\n        <b>2.</b>概述\n        <p className=\"hoverBigger\">swagger接口定义 自动生成---&gt; service层代码的一系列 📖概念 与 🛠 工具。</p>\n      </h2>\n      <h2 className=\"color8\">\n        <b>3.</b>解决问题\n      </h2>\n      <h3 className=\"color8\">\n        <ol>\n          <li className=\"hoverBigger\">什么是 Swagger？什么是 OpenApi？他们是什么关系？</li>\n          <li className=\"hoverBigger\">在了解这些概念之后，这些概念所衍生出的代码生成器生态系统。</li>\n          <li className=\"hoverBigger\">这么多代码生成器，应该如何选择？</li>\n        </ol>\n        <p className=\"hoverBigger indent\" data-color=\"green\">\n          3.1 针对前端的一些生成器最佳工具。\n        </p>\n      </h3>\n    </div>\n  )\n}\n","import * as React from 'react'\n\ninterface IProps {\n  href: string\n  children: React.ReactNode\n  className?: string\n}\n\nexport const LinkOutside: React.FC<IProps> = ({ href, children, className }) => {\n  return (\n    <a target=\"_blank\" href={href} rel=\"noopener noreferrer\" className={className}>\n      {children}\n    </a>\n  )\n}\n","import * as React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nimport { LinkOutside } from '../LinkOutside'\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\n\nexport const JSONSchema = () => {\n  return (\n    <div className={`step ${s.step}`} {...coordinates.JSONSchema}>\n      <h1 className=\"text-center title color12\">JSON Schema</h1>\n      <h2 className=\"color8\">\n        <p>🔗 必要知识: JSON</p>\n        <p>📖 概念: 一种以JSON为基础格式的，定义数据结构的规范</p>\n        <p>⚙ 作用: 可以被各种编程语言解析，作为跨语言传递数据结构的桥梁</p>\n        <p>📜 历史: 有多种版本，例如draft4、draft6，目前最新为 2019-09</p>\n        <p>\n          <LinkOutside href=\"https://json-schema.org/\"> 🌐 官网 https://json-schema.org/</LinkOutside>\n        </p>\n      </h2>\n      <h2 className=\"color8\">\n        例如，我们需要描述一个数据结构:\n        <SyntaxHighlighter language=\"typescript\">\n          {`\n  interface ApiResponse {\n    code: number\n    type: string\n    message: string\n  }\n`}\n        </SyntaxHighlighter>\n        对应的JSONSchema描述:\n        <SyntaxHighlighter language=\"json\">\n          {`\n  {\n    \"ApiResponse\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"code\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        },\n        \"type\": {\n          \"type\": \"string\"\n        },\n        \"message\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n`}\n        </SyntaxHighlighter>\n      </h2>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nimport { LinkOutside } from '../LinkOutside'\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\n\nexport const OpenApi = () => {\n  return (\n    <div className={`step ${s.step}`} {...coordinates.OpenApi}>\n      <h1 className=\"text-center title color7\">Open Api</h1>\n      <h2 className=\"color16\">\n        <p>🔗 必要知识: Restful</p>\n        <p>📖 概念: 一种使用 JSONSchema 定义Restful接口的规范。</p>\n        <p>\n          ⚙ 作用: 使用 JSONSchema 描述<b className=\"color12 fontSize1dot2\">跨语言</b>可用的\n          <b className=\"color12 fontSize1dot2\">数据结构与接口</b>定义。\n        </p>\n        <p>\n          📜 历史: 主要应用版本<b>v2、v3</b>，目前最新版本为3.0.3\n        </p>\n        <p>\n          <LinkOutside href=\"https://www.openapis.org/\">🌐 官网: https://www.openapis.org/ </LinkOutside>\n        </p>\n        <p className={s.imgBg}>\n          <img alt=\"rest\" src=\"/asset/rest.svg\" />\n        </p>\n        <p>\n          关键概念两点: <b className=\"fontSize1dot2 color12\">paths & definitions</b>\n        </p>\n        基础数据结构————<b className=\"fontSize1dot2 color12\">definitions</b>\n        <SyntaxHighlighter language=\"json\">\n          {`\n  \"Pet\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id\": {\n        \"type\": \"integer\",\n        \"format\": \"int64\"\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"example\": \"doggie\"\n      },\n      \"photoUrls\": {\n        \"type\": \"array\"\n      }\n    }\n  }`}\n        </SyntaxHighlighter>\n        请求数据结构———— <b className=\"fontSize1dot2 color12\">paths</b>\n        <SyntaxHighlighter language=\"json\">\n          {`\n\"/pet/findByStatus\": {\n  \"get\": {\n    \"parameters\": [\n      {\n        \"name\": \"status\",\n        \"in\": \"query\",\n        \"required\": true,\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"available\",\n            \"pending\",\n            \"sold\"\n          ],\n          \"default\": \"available\"\n        },\n        \"collectionFormat\": \"multi\"\n      },\n      {\n        \"in\": \"body\",\n        \"name\": \"body\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/definitions/Pet\"\n        }\n      }\n    ],\n    \"responses\": {\n      \"200\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Pet\"\n          }\n        }\n      },\n      \"400\": {\n        \"description\": \"Invalid ID supplied\"\n      }\n    },\n  },\n  }`}\n        </SyntaxHighlighter>\n        其他一些基础数据，例如:\n        <SyntaxHighlighter language=\"json\">\n          {`\n  {\n    \"host\": \"petstore.swagger.io\",\n    \"basePath\": \"/v2\",\n    \"schemes\": [\n      \"https\",\n      \"http\"\n    ],\n  }\n\n          `}\n        </SyntaxHighlighter>\n      </h2>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport { LinkOutside } from '../LinkOutside'\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\n\nexport const Swagger = () => {\n  return (\n    <div className={`step ${s.step}`} {...coordinates.Swagger}>\n      <h1 className=\"title text-center color10\">Swagger</h1>\n      <h2 className=\"color8\">\n        <p>📖 概念: 一种使用 OpenApi 规范，生成 JSONSchema格式 在线restful文档的一系列工具集的统称。</p>\n        <p>🐾 作用范围: 各种主流语言都有其一系列工具链的实现，例如: java、nodejs、golang等。</p>\n        <p>\n          <LinkOutside href=\"https://swagger.io/\">🌐 官网: https://swagger.io/ </LinkOutside>\n        </p>\n        <img alt=\"swaggerTools\" src=\"/asset/swaggerTools.png\" />\n        <p>\n          🚫 左侧<b className=\"color10\">PRO</b>\n          相关的工具基本都是直接使用<b className=\"color10\">第三方服务</b>，考虑到数据安全的角度，可以忽略。\n        </p>\n        <p>\n          🛠 主要可用工具链为右侧<b className=\"color11\">Open Souece</b>部分<b className=\"color12\">Swagger Editor</b>、\n          <b className=\"color13\">Swagger UI</b>、<b className=\"color14\">Swagger Codegen</b>。\n        </p>\n        <ul>\n          <li>\n            <b className=\"color12\">Swagger Editor</b>: 在线编辑Oper Api实时查看结果\n            <a href=\"https://editor.swagger.io/\">Demo网址</a>\n          </li>\n          <li>\n            <b className=\"color12\">Swagger UI</b>: 根据Open Api的定义，为自己的站点自动生成一个友好的查看api的页面。\n            <a href=\"https://petstore.swagger.io/\">Demo网址</a>\n          </li>\n          <li>\n            <b className=\"color12\">Swagger Codegen</b>: 请看下页。\n          </li>\n        </ul>\n      </h2>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nimport { LinkOutside } from '../LinkOutside'\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\n\nexport const SwaggerGenerator = () => {\n  return (\n    <div {...coordinates.SwaggerGenerator} className={`step ${s.step}`}>\n      <h1 className=\"title color2 text-center\">Swagger Codegen</h1>\n      <h2 className=\"color8\">\n        <p>利用标准OpenApi文档，直接生成各种语言代码的一系列工具。</p>\n      </h2>\n      <h2>\n        <ol>\n          <li>\n            <LinkOutside href=\"https://github.com/swagger-api/swagger-codegen\">\n              🦢 Swagger官网的语言生成器项目\n            </LinkOutside>\n            ————\n            <LinkOutside href=\"https://github.com/swagger-api/swagger-codegen/tree/master/samples/client/petstore\">\n              各种语言例子\n            </LinkOutside>\n          </li>\n          <li>\n            <p>\n              <LinkOutside href=\"https://github.com/OpenAPITools/openapi-generator\">🕊 openapi-generator</LinkOutside>\n              ————\n              <LinkOutside href=\"https://github.com/OpenAPITools/openapi-generator/tree/master/samples/client/petstore\">\n                各种语言例子\n              </LinkOutside>\n            </p>\n          </li>\n        </ol>\n      </h2>\n      <h2 className=\"color8\">\n        <p>\n          生成的代码中，不止包含数据类型<b className=\"color12 fontSize1dot2\">定义</b>\n        </p>\n        <p>\n          而且包含直接请求对应接口的<b className=\"color12 fontSize1dot2\">函数或方法</b>。\n        </p>\n        <p>\n          通常程序的分层为 <b className=\"color12 fontSize1dot2\">MVC</b>{' '}\n          三层，这些从接口自动生成的代码为额外的一个独立层——\n          <b className=\"color12 fontSize1dot2\">SERVICE</b> 层\n        </p>\n        该层代码可被所有层调用，但最佳实践应该只被 <b className=\"color12 fontSize1dot2\">M</b> 层调用。\n        <p>调用的例子如下:</p>\n        <SyntaxHighlighter language=\"javascript\">\n          {`\n  import { requestPetStatus, requestPetEat } from 'service/pet'\n\n  ...\n    const myDog = await requestPetStatus({ query: { name: 'puppy' } })\n\n  if (myDot.weight < 20) {\n    await requestPetEat({ body: { id: myDog.id, food: '🍖' }})\n  }\n  ...\n`}\n        </SyntaxHighlighter>\n      </h2>\n\n      <h2 className=\"color8\">\n        <p>🛡 对于有类型加持的语言来说，service层生成的请求函数将在开发阶段得到类型验证的保护，避免了整整一类的bug。</p>\n        <p>\n          🤘\n          将生成器执行步骤加入到开发工作流中后，只要我们上游的swagger接口定义有更新，下游开发者可以立即感知，极大的减少沟通成本。\n        </p>\n        <section className={s.process}>\n          前后端对接流程表现为:\n          <img alt=\"deal\" src=\"/asset/1.png\" height=\"200\" />\n          <img alt=\"deal\" src=\"/asset/2.png\" height=\"200\" />\n          <div className={s.compile}>\n            更新service代码\n            <br />\n            编译检查\n            <br />\n            修正接口<b className=\"color14\">人工介入</b>\n          </div>\n          <img alt=\"deal\" src=\"/asset/3.png\" height=\"200\" />\n        </section>\n      </h2>\n      <h2 className={`color15 ${s.next}`}>\n        <section className=\"text-center\">\n          <h3>😏 以上都是美好的想象世界</h3>\n        </section>\n      </h2>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\n\nexport const Overview: React.FC = () => {\n  return (\n    <div className={`step ${s.step}`} {...coordinates.overview}>\n      <h1 className={`text-center color8 ${s.title}`}>谢谢收看</h1>\n      <h2 className={`text-center color12 ${s.content}`}>提问时间</h2>\n      <img alt=\"qrcode3\" src=\"/asset/qrcode3.jpg\" />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nimport { coordinates } from '../coordinate'\nimport { LinkOutside } from '../LinkOutside'\n\nimport s from './style.module.less'\n\nconst style: React.CSSProperties = {\n  marginTop: '2em',\n}\n\nexport const TsGear: React.FC = () => {\n  return (\n    <div className={`${s.step} step`} {...coordinates.TsGear}>\n      <h1 className=\"title text-center color11\">前端实践</h1>\n      <h2 className=\"color8\">\n        在<b className=\"color12\">Javascript</b>环境，可直接使用官方的\n        <b className=\"fontSize1dot2 color12\">swagger-codegen</b>，或者\n        <b className=\"fontSize1dot2 color12\">openapi-generator</b>生成<b className=\"color12\">SERVICE</b>层代码。\n        生成结果示例:\n        <SyntaxHighlighter language=\"javascript\">\n          {`\n   findPetsByStatus(status, callback) {\n      let postBody = null;\n\n      // verify the required parameter 'status' is set\n      if (status === undefined || status === null) {\n        throw new Error(\"Missing the required parameter 'status' when calling findPetsByStatus\");\n      }\n      let pathParams = {};\n      let queryParams = {\n        'status': this.apiClient.buildCollectionParam(status, 'csv')\n      };\n      let headerParams = {};\n      let formParams = {};\n\n      let authNames = ['petstore_auth'];\n      let contentTypes = [];\n      let accepts = ['application/xml', 'application/json'];\n      let returnType = [Pet];\n\n      return this.apiClient.callApi(\n        '/pet/findByStatus', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n          `}\n        </SyntaxHighlighter>\n      </h2>\n      <h2 className=\"color8\">\n        在<b className=\"color12\">Typescript</b>环境，除了官方的工具之外，还有几个推荐的第三方工具\n        <ul>\n          <li>\n            <LinkOutside className=\"fontSize1dot2\" href=\"https://github.com/cellular/oazapfts\">\n              oazapfts\n            </LinkOutside>\n            : 使用typescript抽象语法树生成代码。\n          </li>\n          <li>\n            <LinkOutside className=\"fontSize1dot2\" href=\"https://github.com/alibaba/pont\">\n              pont\n            </LinkOutside>\n            : 阿里的一个工具，自动生成typescript代码。不光有工具，还有vscode插件。\n          </li>\n          <li className=\"color8\" style={style}>\n            <LinkOutside className=\"color12 doubleFontSize\" href=\"https://github.com/superwf/ts-gear\">\n              TsGear\n            </LinkOutside>\n            <p>\n              我组项目<b className=\"color5\">自研</b>工具，已经应用在<b className=\"color14\">三</b>个前端系统上。\n            </p>\n            <p>\n              名称解释: 将服务端与客户端两个环境像<b className=\"color3\">齿轮</b>一样对接起来自动运行。\n            </p>\n            <p>\n              主要<b className=\"color12\">解决</b>上述的一些swagger定义不完善的问题，例如:\n              <b className=\"color10\">类型丢失、关键字冲突、范型解析</b>\n              ，尽最大可能生成可用的 <b className=\"color6\">service</b> 层代码，并生成测试环境\n              <b className=\"color6\">mock</b>数据。 示例代码如下:\n            </p>\n            <p>\n              <img alt=\"tsgear\" src=\"/asset/tsGearService.gif\" width=\"100%\" />\n            </p>\n            <p>\n              代码组织方式特点:\n              每个请求都是独立函数，可独立引入。生成的请求函数依赖接口定义数量，可能会非常多，但是实际项目中仅用到一小部分。但由于请求之间互相独立，在生产环境发布编译中进行有效的\n              <b className=\"color6\">treeshake</b>，减少体积。\n            </p>\n          </li>\n        </ul>\n        <p>\n          代码生成器工具总体分两大类型: 字符串模板生成与语法树生成。除了查看源码之外，可以从错误发生阶段来判断。\n          <ul>\n            <li>字符串模板生成: 在生成时兼容性较强，只要最终能拼出字符串即可。但在运行时会报错。例如官方的生成器。</li>\n            <li>\n              语法树生成:\n              因为在最初收集接口定义时即要按目标语言语法规则，因此在生成时就会报错。例如后面的几个非官方生成器。\n            </li>\n          </ul>\n        </p>\n      </h2>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nimport { coordinates } from '../coordinate'\n\nimport s from './style.module.less'\n\nexport const SwaggerGeneratorIssue = () => {\n  return (\n    <div className={`step ${s.step}`} {...coordinates.SwaggerGeneratorIssue}>\n      <h1 className=\"title text-center color6\">Swagger Codegen的一些问题</h1>\n      <h2 className=\"text-center color16\"> 😈 Welcome to 真实世界，这里有各种☠️ ☢ ☣💩 👻 💀</h2>\n      <h2 className=\"color2\">\n        🤨 特殊字符，比如中文等\n        <SyntaxHighlighter language=\"json\">\n          {`\n{\n  \"abc输出参数\": {  // 请求路径或definition定义中带了个中文，代码生成器是翻译呢，还是转成拼音？\n    \"type\": \"object\",\n    \"required\": [\"dueDay\", \"requestChannel\"],\n    \"properties\": {\n      \"requestChannel\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n}\n\n        `}\n        </SyntaxHighlighter>\n      </h2>\n      <h2 className=\"color2\">\n        🧐 类型对应丢失\n        <SyntaxHighlighter language=\"json\">\n          {`\n{\n  ...\n  \"$ref\": \"#/definitions/LostDefinitionVO\" // 有引用，没定义\n}\n\n        `}\n        </SyntaxHighlighter>\n      </h2>\n      <h2 className=\"color2\">\n        🤯 范型解析，范型嵌套，且嵌套时常常也同时混合前两个问题。\n        <SyntaxHighlighter language=\"json\">\n          {`\n{\n  ...\n  \"Result«ReplyVO«Data»»\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"type\": \"string\"\n      },\n      \"result\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/definitions/ReplyVO«Data»\"\n        }\n      }\n    }\n  },\n}\n        `}\n        </SyntaxHighlighter>\n      </h2>\n      <h2 className=\"color2\">\n        😵 关键字冲突\n        <SyntaxHighlighter language=\"json\">\n          {`\n{\n  ...\n  \"List\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"type\": \"string\"\n      },\n      \"result\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/definitions/Map\" // 也可能是 Array，List等\n        }\n      }\n    }\n  },\n}\n        `}\n        </SyntaxHighlighter>\n      </h2>\n      <h2 className=\"color2\">\n        😭 与实际相悖的错误定义\n        <SyntaxHighlighter language=\"json\">\n          {`\n{\n  ...\n  \"parameters\": [\n    {\n      \"in\": \"body\",\n      \"name\": \"id\",\n      \"description\": \"id数组\",\n      \"required\": false,\n      \"schema\": {\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      } // 事实上这个参数是个integer数组，但定义成了integer\n    }\n  ]\n}\n        `}\n        </SyntaxHighlighter>\n      </h2>\n\n      <h2 className=\"color10\">\n        💣 最终结果: 要不就是代码生成器报错，要不生成的代码报错，最可怕的是运行时乃至生产环境报错。\n      </h2>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport { Title } from './Title'\nimport { Preface } from './Preface'\nimport { JSONSchema } from './JSONSchema'\nimport { OpenApi } from './OpenApi'\nimport { Swagger } from './Swagger'\nimport { SwaggerGenerator } from './SwaggerGenerator'\nimport { Overview } from './Overview'\nimport { TsGear } from './TsGear'\nimport { SwaggerGeneratorIssue } from './SwaggerGeneratorIssue'\n\nexport const App = () => {\n  return (\n    <>\n      <Title />\n      <Preface />\n      <JSONSchema />\n      <OpenApi />\n      <Swagger />\n      <SwaggerGenerator />\n      <SwaggerGeneratorIssue />\n      <TsGear />\n      <Overview />\n    </>\n  )\n}\n","import * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './style/global.less'\nimport { App } from './App'\nimport 'animate.css'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('impress'),\n  () => {\n    global.impress().init()\n  },\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}